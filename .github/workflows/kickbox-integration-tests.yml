name: Run Tests

on:
  push:
  pull_request:

jobs:
  test-kickbox-react:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Run ESLint
        run: npx eslint src/js --ext .js,.jsx --format=json --output-file=eslint-report.json || true

      - name: Run Prettier check
        run: npx prettier --check src/js/

  test-kickbox-integration:
    name: Test KickBox integration Plugin
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wordpress_test
          MYSQL_USER: wordpress
          MYSQL_PASSWORD: wordpress
        ports:
          - 3306:3306
        options:
          --health-cmd="mysqladmin ping --ssl-mode=DISABLED"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    container:
      image: php:8.1-cli

    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer
        run: |
          # Download and install Composer
          curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
          composer --version

      - name: Install dependencies
        run: |
          # Update package list
          apt-get update
          
          # Install additional PHP extensions and system dependencies
          apt-get install -y libzip-dev zip unzip git subversion default-mysql-client curl
          docker-php-ext-install zip pdo pdo_mysql mysqli
          
          # Install WP-CLI
          curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
          chmod +x wp-cli.phar
          mv wp-cli.phar /usr/local/bin/wp
          
          # Verify installations
          php --version
          wp --version --allow-root

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Install WordPress test suite with WooCommerce
        run: |
          # Install WordPress test suite with WooCommerce (this will create /tmp/wordpress)
          bash bin/install-wp-tests.sh wordpress_test wordpress wordpress mysql latest true 10.2

      - name: Copy plugin to WordPress plugins directory
        run: |
          # Create plugin directory in the WordPress installation
          mkdir -p /tmp/wordpress/wp-content/plugins/kickbox-integration
          
          # Copy all plugin files
          cp -r . /tmp/wordpress/wp-content/plugins/kickbox-integration/
          
          # Set proper permissions
          chmod -R 755 /tmp/wordpress/wp-content/plugins/kickbox-integration

      - name: Run PHPUnit tests
        run: |
          # Set up test environment variables and run tests
          export WP_TESTS_DIR=/tmp/wordpress-tests-lib
          export WP_CORE_DIR=/tmp/wordpress
          export WP_TESTS_PHPUNIT_POLYFILLS_PATH=$PWD/vendor/yoast/phpunit-polyfills
          ./vendor/bin/phpunit --testdox --verbose
